{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","setTimeout","resetTurn","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAOhE,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACEF,UAAU,OACVC,IAAI,iBACJC,IAAI,YACJC,QAdY,WACbJ,GACHF,EAAaD,EAEhB,QAeF,CClBD,IAAMQ,EAAa,CACjB,CAAEH,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAE,IAAO,kBAAmBA,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAE,IAAO,mBAAoBA,SAAS,IA0EzBC,MAvEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAEMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,EAAtB,IACLC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,UAA/B,IAEPZ,EAASS,GACTL,EAAa,MACbE,EAAa,MACbJ,EAAS,EACV,EAEDa,qBAAU,WACRP,GACD,GAAE,IAEH,IAAMpB,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,EAC/C,EAED4B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,CAEV,GACF,IAEH8B,YAAW,kBAAMC,GAAN,GAAmB,KAEjC,GAAE,CAACf,EAAWE,IAEf,IAAMa,EAAY,WAChBd,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAiB,GAAS,OAAIA,EAAY,CAAhB,IAClBZ,GAAY,EACb,EAED,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBACA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,EACNC,aAAcA,EAEdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAFLH,EAAK2B,GAJC,MAUjB,wCAAWb,OAGhB,E,MC7EDmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.dab153e7.chunk.js","sourcesContent":["import './SingleCard.css';\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card);\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className={flipped ? \"flipped\" : \"\"}>\n        <img className=\"front\" src={card.src} alt=\"Card Front\" />\n        <img\n          className=\"back\"\n          src=\"/img/cover.png\"\n          alt=\"Card Back\"\n          onClick={handleClick}\n        />\n      </div>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched: false },\n  { src: \"/img/potion-1.png\", matched: false },\n  { \"src\": \"/img/ring-1.png\", matched: false },\n  { src: \"/img/scroll-1.png\", matched: false },\n  { src: \"/img/shield-1.png\", matched: false },\n  { \"src\": \"/img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setCards(shuffledCards);\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(0);\n  }\n\n  useEffect(() => {\n    shuffleCards();\n  }, [])\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          })\n        })\n      }\n      setTimeout(() => resetTurn(), 1000);\n    }\n  }, [choiceOne, choiceTwo])\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n    setDisabled(false);\n  }\n\n  return (\n    <div className='App'>\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard\n            card={card}\n            handleChoice={handleChoice}\n            key={card.id}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <p>Turns: {turns}</p>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}